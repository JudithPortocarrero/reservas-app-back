service: appointment-service

plugins:
  - serverless-aws-documentation
  - serverless-auto-swagger

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  profile: default
  environment:
    APPOINTMENTS_TABLE: AppointmentsTable
    APPOINTMENTS_TOPIC_ARN:
      Ref: AppointmentsSNSTopic
    DB_HOST: tu-rds-endpoint
    DB_USER: admin
    DB_PASS: clave123
    DB_NAME: appointments
    EVENT_BUS_NAME: AppointmentEventBus
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
      Resource:
        - arn:aws:dynamodb:${self:provider.region}:*:table/AppointmentsTable
    - Effect: Allow
      Action:
        - sns:Publish
      Resource:
        - Ref: AppointmentsSNSTopic
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
      Resource:
        Fn::GetAtt: [AppointmentsTable, Arn]

functions:
  register:
    handler: src/handlers/appointment.register
    events:
      - http:
          path: appointment
          method: post

  appointment_pe:
    handler: src/handlers/appointment_pe.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SQSPE, Arn]

  appointment_cl:
    handler: src/handlers/appointment_cl.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt: [SQSCL, Arn]

  updateStatus:
    handler: src/handlers/appointment.updateStatus
    events:
      - sqs:
          arn:
            Fn::GetAtt: [AppointmentStatusQueue, Arn]
  
  getByInsuredId:
    handler: src/handlers/appointment.getByInsuredId
    events:
      - http:
          path: appointment/{insuredId}
          method: get
          request:
            parameters:
              paths:
                insuredId: true

resources:
  Resources:
    AppointmentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: AppointmentsTable
        AttributeDefinitions:
          - AttributeName: insuredId
            AttributeType: S
          - AttributeName: scheduleId
            AttributeType: N
        KeySchema:
          - AttributeName: insuredId
            KeyType: HASH
          - AttributeName: scheduleId
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    AppointmentsSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: AppointmentsTopic

    SQSPE:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_PE

    SQSCL:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS_CL

    SQSPESubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref AppointmentsSNSTopic
        Protocol: sqs
        Endpoint: !GetAtt SQSPE.Arn
        FilterPolicy:
          countryISO: ["PE"]
        RawMessageDelivery: true

    SQSCLSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn: !Ref AppointmentsSNSTopic
        Protocol: sqs
        Endpoint: !GetAtt SQSCL.Arn
        FilterPolicy:
          countryISO: ["CL"]
        RawMessageDelivery: true
    
    SQSPolicyPE:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SQSPE
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "SQS:SendMessage"
              Resource: !GetAtt SQSPE.Arn
              Condition:
                ArnEquals:
                  "aws:SourceArn": !Ref AppointmentsSNSTopic

    SQSPolicyCL:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref SQSCL
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "SQS:SendMessage"
              Resource: !GetAtt SQSCL.Arn
              Condition:
                ArnEquals:
                  "aws:SourceArn": !Ref AppointmentsSNSTopic

    AppointmentEventBus:
      Type: AWS::Events::EventBus
      Properties:
        Name: AppointmentEventBus

    AppointmentStatusQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: AppointmentStatusQueue

    AppointmentStatusQueuePolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        Queues:
          - !Ref AppointmentStatusQueue
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "SQS:SendMessage"
              Resource: !GetAtt AppointmentStatusQueue.Arn
              Condition:
                ArnEquals:
                  aws:SourceArn: !GetAtt AppointmentEventRule.Arn

    AppointmentEventRule:
      Type: AWS::Events::Rule
      Properties:
        EventBusName: !Ref AppointmentEventBus
        EventPattern:
          detail-type:
            - "AppointmentCompleted"
        Targets:
          - Arn: !GetAtt AppointmentStatusQueue.Arn
            Id: "SendToSQS"

custom:
  autoswagger:
    title: 'Appointment API'
    apiType: 'http'
    generateSwaggerOnDeploy: true

  documentation:
    api:
      info:
        version: "1.0.0"
        title: "Appointment API"
        description: "API para agendar citas médicas"
    models:
      - name: AppointmentRequest
        contentType: application/json
        schema:
          type: object
          properties:
            insuredId:
              type: string
            scheduleId:
              type: number
            countryISO:
              type: string
              enum: [PE, CL]
          required: [insuredId, scheduleId, countryISO]

  register:
    handler: src/handlers/appointment.register
    events:
      - http:
          path: appointment
          method: post
          request:
            schemas:
              application/json: AppointmentRequest
    documentation:
      summary: Registrar cita
      description: Guarda la cita en DynamoDB y la envía a SNS

  getByInsuredId:
    handler: src/handlers/appointment.getByInsuredId
    events:
      - http:
          path: appointment/{insuredId}
          method: get
          request:
            parameters:
              paths:
                insuredId: true
    documentation:
      summary: Obtener citas
      description: Devuelve todas las citas de un asegurado
